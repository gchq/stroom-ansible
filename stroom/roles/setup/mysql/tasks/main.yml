---
# tasks file for roles/mysql

# See https://serverfault.com/questions/824975/failed-to-get-d-bus-connection-operation-not-permitted
# for running this role in docker with molecule

- name: Download mysql repo rpm {{ mysql_repo_rpm_file }}
  become: true
  get_url: 
    url: "https://dev.mysql.com/get/{{ mysql_repo_rpm_file }}"
    dest: "/tmp/{{ mysql_repo_rpm_file }}"
    timeout: 120

- name: Install mysql repo package {{ mysql_repo_rpm_file }}
  become: true
  yum:
     name:  "/tmp/{{ mysql_repo_rpm_file }}"
     state: present

- name: Disable default/latest MySQL repository
  become: true
  ini_file:
    dest: "{{ mysql_repo_local_install }}"
    section: "mysql{{ mysql_repo_version }}-community"
    option: enabled
    value: "0"

- name: Enable target MySQL repository
  become: true
  ini_file:
    dest: "{{ mysql_repo_local_install }}"
    section: "mysql{{ mysql_repo_target_version }}-community"
    option: enabled
    value: "1"

- name: Install MySQL and related YUM packages
  become: true
  yum: 
    name: "{{ packages }}" 
    state: present
  vars:
    packages:
    - mysql
    - mysql-server
    - gcc-c++ # needed for MySQLdb python api
    - MySQL-python # needed for MySQLdb python api

- name: Copy my.cnf to /etc/my.cnf
  become: true
  copy:
    src: my.cnf
    dest: /etc/my.cnf
  notify: Restart mysql

- name: Ensure mysqld service is running
  become: true
  service: 
    name: mysqld 
    state: started 
    enabled: true

# Harden mysql - see:
# https://dba.stackexchange.com/questions/102066/ansible-how-to-change-mysql-server-root-password-by-reprovisioning-the-server/102100

# On first run of this task on a fresh host it will log in to root
# with no password (see check_implicit_admin), then will update the
# root user. On subsequent runs it will log in with the new password.
- name: Update mysql root password for localhost
  become: true
  mysql_user: 
    name: root 
    host: localhost 
    priv: "*.*:ALL,GRANT"
    password: "{{ stroom_db_root_password }}"
    login_host: localhost
    login_password: "{{ stroom_db_root_password }}"
    state: present
    check_implicit_admin: true

- name: Copy .my.cnf file with root password credentials
  become: true
  template: 
    src: templates/my.cnf.j2
    dest: /root/.my.cnf 
    owner: root 
    mode: 0600

- name: Update mysql root password for all other root accounts
  become: true
  mysql_user: 
    name: root 
    host: "{{ item }}" 
    password: "{{ stroom_db_root_password }}"
  loop:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1

- name: Ensure anonymous users are not in the database
  mysql_user: 
    name: '' 
    host: "{{ item }}" 
    state: absent
  loop:
    - localhost
    - "{{ inventory_hostname }}"

- name: Remove the test database
  mysql_db: 
    name: test 
    state: absent

- name: Create mysql databases
  mysql_db: 
    name: "{{ item.name }}" 
    state: present
  loop: "{{ stroom_databases | flatten(levels=1) }}"
  loop_control:
      label: "{{ item.name }}"

- name: Setup MySQL users
  mysql_user:
    name: "{{ item.user }}"
    password: "{{ item.password | default('Str00mP@ssword1') }}"
    host: "{{ item.host | default('%') }}"
    priv: "{{ item.privs | default(item.name + '.*:ALL') }}"
  loop: "{{ stroom_databases | flatten(levels=1) }}"
  loop_control:
    label: "{{ item.name }}, {{ item.user }}, {{ item.host | default('%') }}, {{ item.privs | default(item.name + '.*:ALL') }}"
