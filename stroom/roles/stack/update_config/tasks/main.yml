---

- name: 'Check mandatory variables are defined'
  assert:
    that:
      - local_config_dir is defined
      - stack_env_vars is defined
      - stack_install_root_dir is defined
      - stack_name is defined
      - stack_version is defined
      - stroom_user is defined

  # Set the HOST_IP variable to the inventory hostname
- import_role:
    name: stack/set_host_ip
  tags:
    - deploy
    - configure

# NOTE: It is debatable if we configure the file like this or use a jinja template file
# If we use templates then we need to maintain the template in this repo.
# For real deployments where a clone/fork of this repo is used, jinja templates
# would probably make more sense, and be a load faster.

  # Set all the env vars in the stack env file
- import_role:
    name: stack/set_env_vars_values
  tags:
    - deploy
    - configure


  # See the comment inside files_and_templates.yml for details
- name: "Copy files and templates"
  include_tasks: files_and_templates.yml
  loop:
    # Relative to both {{ stack_home_dir }} and {{ files_and_templates_dir }}
    - "volumes"
    - "config"
  loop_control:
    loop_var: sub_dir_to_copy
  tags:
    - deploy
    - configure


#- name: Get absolute path 
  #command: "realpath {{ local_config_dir }}"
  #register: absolute_path

## Services config

#- name: Update the local env file from the inventory
  #command: "python3 ./scripts/update_env_file.py {{ absolute_path.stdout }}/{{ stack_name }}"

#- name: Update the local upstream files from the inventory
  #command: "python3 ./scripts/update_upstream_files.py {{ absolute_path.stdout }}/{{ stack_name }}"
  
#- name: Update the local server.conf file from the inventory
  #command: "python3 ./scripts/update_server_conf.py {{ absolute_path.stdout }}/{{ stack_name }}"


