---
ansible_connection: ssh

# The user that ansible will connect as, must have sudo rights to 'sudo su -'.
# The user should have passwordless sudo and an ssh key pair that has already
# been set up on the remote host(s). The ssh key to use can be set on the command line
# using '--private-key=~/.ssh/my_private_key_id_rsa'
ansible_user: centos

# The name of the stack to deploy
stack_name: "stroom_proxy"

# The version of the stack to deploy
stack_version: "v7.0-.beta.26-2"

# The local directory where the stack configuration is kept. This configuration
# will be pushed out to the proxy hosts. This directory should be under source
# control.
# IMPORTANT: This is relative to the playbook being run.
local_config_dir: "../config/remote_proxy/example_inventory"

# The user that stroom-proxy will run as
stroom_user: "stroomuser"

# The directory where stroom-proxy will be installed on the remote host
stack_install_root_dir: "/home/{{ stroom_user }}"

# Set to true to delete all the self signed development certificates
remove_development_certificates: false

# Set this to the path of a templated env file on the controller
# if you don't want to use the templated env file supplied in the stack
# release archive.
# local_templated_env_file_path:

# All stack_env_ variables are used for substitution in the .env.j2 file that
# comes bundled with the stack

# Uncomment this if you have a DNS server, else the containers can't resolve it
stack_env_host_ip: "{{ hostvars[groups['stroom_remote_proxy_stack'][0]]['public_ip_address'] | default(inventory_hostname) }}"

# The key/cert/ca files used by nginx
# Must exist in files_and_templates/volumes/nginx/certs
#stack_env_nginx_ssl_certificate_key: "example.server.key"
#stack_env_nginx_ssl_certificate: "example.server.cert"
#stack_env_nginx_ssl_ca_certificate: "example.ca.cert"

#stack_env_stroom_nginx_docker_repo: "gchq/stroom-nginx"
#stack_env_stroom_proxy_docker_repo: "gchq/stroom-proxy"
#stack_env_stroom_log_sender_docker_repo: "gchq/stroom-log-sender"

# The java key/truststores to use when checking feed status
# Must exist in files_and_templates/volumes/stroom-proxy-remote/certs
# The absolute path inside the container
#stack_env_stroom_proxy_remote_client_keystore_password: "a new password"
#stack_env_stroom_proxy_remote_client_keystore_path: "/stroom-proxy/certs/example.client.jks"
#stack_env_stroom_proxy_remote_client_truststore_password: "a new password"
#stack_env_stroom_proxy_remote_client_truststore_path: "/stroom-proxy/certs/example.ca.jks"

# The API token used for checking feed status as provided by stroom admins
#stack_env_stroom_proxy_remote_feed_status_api_key: "eyJhbG......ciOwd7Q"

# Set this with the dns/hostname/IP of the downstream proxy/stroom
# DNS/hostname will only work if there is a DNS server.
stack_env_stroom_proxy_remote_feed_status_url: "https://192.168.102.11/api/proxy/feedStatus/v1"

# Set this with the dns/hostname/IP of the downstream proxy/stroom
# DNS/hostname will only work if there is a DNS server.
stack_env_stroom_proxy_remote_forward_url: "https://192.168.102.11/stroom/datafeed"

# The java key/truststores to use when forwarding data downstream
# Must exist in files_and_templates/volumes/stroom-proxy-remote/certs
# The absolute path inside the container
#stack_env_stroom_proxy_remote_forwarding_keystore_password: "a new password"
#stack_env_stroom_proxy_remote_forwarding_keystore_path: "/stroom-proxy/certs/example.client.jks"
#stack_env_stroom_proxy_remote_forwarding_truststore_password: "a new password"
#stack_env_stroom_proxy_remote_forwarding_truststore_path: "/stroom-proxy/certs/example.ca.jks"

# These need to be set for dev testing when using IPs and self signed certs
stack_env_stroom_proxy_remote_forwarding_host_verification_enabled: "false"
stack_env_stroom_proxy_remote_jersey_verify_hostname: "false"
stack_env_stroom_proxy_remote_jersey_trust_self_signed: "true"

# Configure the sending of proxy/nginx logs to a downstream stroom/proxy
#stack_env_stroom_log_sender_datafeed_url: "https://a-downstream-stroom-or-proxy/stroom/datafeeddirect"
#stack_env_stroom_log_sender_default_environment: "DEV"
# Must exist in files_and_templates/volumes/stroom-proxy-remote/certs
# The absolute path inside the container
#stack_env_stroom_log_sender_ca_cert_file: "/stroom-log-sender/certs/ca.pem.crt"
#stack_env_stroom_log_sender_cert_file: "/stroom-log-sender/certs/client.pem.crt"
#stack_env_stroom_log_sender_private_key_file: "/stroom-log-sender/certs/client.unencrypted.key"

# If you have no internet connection then you will want to set the following
# to locations on your network

# The path on a file server where the stack archive file can be found
# stroom_stack_archive_url_base: "https://github.com/gchq/stroom-resources/releases/download/stroom-stacks-{{ stack_version }}"

# The URL to download the docker-ce yum repo file from
# docker_yum_repo_file_url: https://download.docker.com/linux/centos/docker-ce.repo

# The baseurl value to use in the docker-ce yum repo file if you are not downloading
# the repo file from docker_yum_repo_file_url
# docker_yum_repo_base_url: https://download.docker.com/linux/centos/7/$basearch/stable

# The URL to download the docker-compose binary from
# docker_compose_url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64"

# epel_repo_url:
# epel_repo_gpg_key_url:

# vim: set filetype=yaml shiftwidth=2 tabstop=2 expandtab:
