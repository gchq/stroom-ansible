---
ansible_connection: ssh

# The user that ansible will connect as, must have sudo rights to 'sudo su -'.
# The user should have passwordless sudo and an ssh key pair that has already
# been set up on the remote host(s). The ssh key to use can be set on the command line
# using '--private-key=~/.ssh/my_private_key_id_rsa'
ansible_user: "centos"

# The name of the environment, as used in the browser title bar
environment_name: "Test Stroom"

# The name of the stack to deploy
stack_name: "stroom_services"

stroom_version: "v7.0-beta.137"

stroom_proxy_version: "{{ stroom_version }}"

# The version of the stack to deploy
stack_version: "{{ stroom_version }}"

# The path on a file server where the stack archive file can be found
stroom_stack_archive_url_base: "https://github.com/gchq/stroom-resources/releases/download/stroom-stacks-{{ stack_version }}"

# The local directory where the stack configuration is kept. This configuration
# will be pushed out to the proxy hosts. This directory should be under source
# control. 
# IMPORTANT: This is relative to the playbook being run.
local_config_dir: "../config/multi_node_mixed_cluster/example_inventory"

# The user that stroom-proxy will run as
stroom_user: "stroomuser"

# The directory where the stack will be installed on the remote host
stack_install_root_dir: "/home/{{ stroom_user }}"

# Location to alternative OpenJDK repo 
# java_15_alt_url: "https://download.java.net/java/GA/jdk15.0.2/0d1cfde4252546c6931946de8db48ee2/7/GPL/openjdk-15.0.2_linux-x64_bin.tar.gz"
# java_16_alt_url: "https://download.java.net/java/GA/jdk16.0.1/7147401fd7354114ac51ef3e1328291f/9/GPL/openjdk-16.0.1_linux-x64_bin.tar.gz"
# java_16_alt_url: "https://download.java.net/java/GA/jdk16.0.2/d4a915d82b4c4fbb9bde534da945d746/7/GPL/openjdk-16.0.2_linux-x64_bin.tar.gz"

# Set to true, to specify using the mysql-community-client (v8.0) repo on the internet
use_mysql_yum_repo_file_url: true

# Location to a different mysql-community-client (v8.0) repo used in the templated mysql-community.repo file
mysql_yum_repo_base_url: "https://repo.mysql.com/yum/mysql-8.0-community/el/7/$basearch/"

# The directory where stroom will be installed on the remote host
stroom_install_root_dir: "{{ stack_install_root_dir }}"

# The directory where stroom-proxy will be installed on the remote host
stroom_proxy_install_root_dir: "{{ stack_install_root_dir }}"

stroom_temp_dir: "/tmp/stroom"

# Set to true to delete all the self signed development certificates
remove_development_certificates: false

# NOTE: If you are running in an environment withouth a DNS server then the docker
# containers will not be able to resolve and hostnames defined in the /etc/hosts
# file. Thus we need to use IP addresses everywhere. This could be mitigated by
# using the extra_hosts feature of docker-compose and getting ansible to add entries
# to that.

# The hostname of the nginx API gateway. This could be a DNS name in front of
# multiple nginx instances.
nginx_advertised_host: "{{ hostvars[groups['stroom_services_stack'][0]]['public_ip_address'] 
  | default(hostvars[groups['stroom_services_stack'][0]]['inventory_hostname'])}}"

# The hostname of the stroom database server
stroom_db_host: "{{ hostvars[groups['stroom_database'][0]]['public_ip_address'] 
  | default(hostvars[groups['stroom_database'][0]]['inventory_hostname']) }}"
# stroom_db_port: "{{hostvars[groups['stroom_database'][0]]['mysql_port'] }}"  
# stroom_db_port: "{{ mysql_port }}"  # Was 3306
stroom_db_port: "{{hostvars[groups['stroom_database'][0]]['mysql_port'] | default('3306') }}"  

# The hostname of the stats database server
stats_db_host: "{{ hostvars[groups['stroom_stats_database'][0]]['public_ip_address'] 
  | default(hostvars[groups['stroom_stats_database'][0]]['inventory_hostname']) }}"
# stats_db_port: "{{ mysql_port }}"  
stats_db_port: "{{hostvars[groups['stroom_stats_database'][0]]['mysql_port'] | default('3307') }}"  

# Database credentials
#stroom_db_root_password: "StroomPassword1?_root"
stroom_db_username: "stroomuser"
stroom_db_password: "Stroompassword1!"
stats_db_username: "statsuser"
stats_db_password: "Stroompassword1!"

# All the databases/users that will be created
stroom_databases:

  - name: stroom
    user: "{{ stroom_db_username }}"
    password: "{{ stroom_db_password }}"
    privs: "stroom.*:ALL"
    host: "%"

  - name: stats
    user: "{{ stats_db_username }}"
    password: "{{ stats_db_password }}"
    privs: "stats.*:ALL"
    host: "%"

# Key/value pairs to set in the stack env file.  These will replace existing
# values in the env file or add a new line if the name doesn't already exist.
# It is debatable if we should hold a jinja2 template for this file or use this
# apporach
stack_env_vars:

  # HOST_IP current set in roles/stack/set_host_ip

  DOCKER_HOST_HOSTNAME: "{{ inventory_hostname }}"
  DOCKER_HOST_IP: "{{ public_ip_address | default(ansible_default_ipv4 | default(ansible_all_ipv4_addresses[0])) }}"

  DB_HOST_IP: "{{ stroom_db_host }}"
  STROOM_AUTH_DB_HOST: "{{ stroom_db_host }}"
  STROOM_AUTH_DB_PORT: "{{ stroom_db_port }}"

  NGINX_ADVERTISED_HOST: "{{ nginx_advertised_host }}"

  # TODO these probably don't need to be set as they are mostly used
  # for nginx reverse proxying which we are doing via jinja templates
  #STROOM_AUTH_SERVICE_HOST: "{{ nginx_advertised_host }}"
  #STROOM_AUTH_UI_HOST: "{{ nginx_advertised_host }}"
  #STROOM_HOST: "{{ nginx_advertised_host }}"
  #STROOM_PROXY_HOST: "{{ nginx_advertised_host }}"

  #NGINX_SSL_CERTIFICATE_KEY: "example.server.key"
  #NGINX_SSL_CERTIFICATE: "example.server.cert"
  #NGINX_SSL_CA_CERTIFICATE: "example.ca.cert"

  #STROOM_NGINX_DOCKER_REPO: "gchq/stroom-nginx"
  #STROOM_PROXY_DOCKER_REPO: "gchq/stroom-proxy"

  #STROOM_PROXY_LOCAL_FEED_STATUS_API_KEY: "eyJhbG......ciOwd7Q"
  STROOM_PROXY_LOCAL_FEED_STATUS_URL: "https://{{ nginx_advertised_host }}/api/feedStatus/v1"

  # Use same (key|trust)store for client and forwarding
  #STROOM_PROXY_LOCAL_FORWARDING_KEYSTORE_PASSWORD: "a new password"
  #STROOM_PROXY_LOCAL_FORWARDING_KEYSTORE_PATH: "/stroom-proxy/certs/example.client.jks"

  #STROOM_PROXY_LOCAL_FORWARDING_TRUSTSTORE_PASSWORD: "a new password"
  #STROOM_PROXY_LOCAL_FORWARDING_TRUSTSTORE_PATH: "/stroom-proxy/certs/example.ca.jks"


# TODO stroom.conf is no more in v7 so instead we need a jinja2 template in 
# files_and_templates/stroom/config that contains everything we want

# Values for the stroom.conf file
# These could be acheived with a jinja template
#stroom_conf_values:

  #- key: stroom.temp
    #value: "{{ stroom_temp_dir }}"

  #- key: stroom.node
    #value: "{{ inventory_hostname_short }}"

  #- key: stroom.htmlTitle
    #value: "{{ environment_name }}"

  #- key: stroom.jdbcDriverUrl
    #value: jdbc:mysql://{{ stroom_db_host }}:{{ stroom_db_port }}/stroom?useUnicode=yes&characterEncoding=UTF-8

  #- key: stroom.statistics.sql.jdbcDriverUrl
    #value: jdbc:mysql://{{ stats_db_host }}:{{ stats_db_port }}/stats?useUnicode=yes&characterEncoding=UTF-8

    ## This should be set to the value of "stroomServiceUser's" token in Tools => API Keys
    ## TODO the value below should be the default but won't be until 6.0.28
  #- key: stroom.security.apiToken
    #value: "eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlzcyI6InN0cm9vbSIsImF1ZCI6IlBabkpyOGtIUktxbmxKUlFUaFNJIn0.qT5jdPWBpN9me0L3OqUT0VFT2mvVX9mCp0gPFyTVg8DkFTPLLYIuXjOslvrllJDBbqefEtqS9OwQs3RmRnZxror676stTP6JHN76YqJWj2yJYyJGuggbXjZnfTiZGO3SOxl5FP4nmRRvPxA3XqV9kippKBpHfqm5RuTpFTU8uses2iaHFm7lY4zXmKDmwVizXybBQBtpxrBNQkeQjQyg7UFkpsRO8-PmIdbTldRhGlud5VpntwI1_ahwOzK-einUJQOWrcOBmXAMPRYBI6tSLT1xS_c5XpFX1Rxoj3FGjI-Myqp_2Nt_lZuQ3h-0Qh8WkZMnWQ76G7CKawXzRAwd7Q"

  #- key: stroom.serviceDiscovery.simpleLookup.basePath
    #value: http://localhost:8080

    ## Not using kafka yet, so set to blank to stop it trying to connect
  #- key: stroom.connectors.kafka.default.bootstrap.servers
    #value: ""

  #- key: stroom.advertisedUrl
    #value: https://{{ nginx_advertised_host }}
  #- key: stroom.auth.services.url
    #value: https://{{ nginx_advertised_host }}/api/auth
  #- key: stroom.auth.authentication.service.url
    #value: https://{{ nginx_advertised_host }}/api/auth/authentication/v1
  #- key: stroom.users.ui.url
    #value: https://{{ nginx_advertised_host }}/s/users
  #- key: stroom.apikeys.ui.url
    #value: https://{{ nginx_advertised_host }}/s/tokens
  #- key: stroom.changepassword.url
    #value: https://{{ nginx_advertised_host }}/s/changepassword
  #- key: stroom.url.dashboard
    #value: http://{{ nginx_advertised_host }}/stroom/dashboard.jsp

    ## Settings these stops stroom trying to send internal stats to stroom-stats
  #- key: stroom.internalstatistics.benchmarkCluster.docRefs
    #value: docRef(StatisticStore,946a88c6-a59a-11e6-bdc4-0242ac110002,Benchmark-Cluster Test)
  #- key: stroom.internalstatistics.pipelineStreamProcessor.docRefs
    #value: docRef(StatisticStore,946a80fc-a59a-11e6-bdc4-0242ac110002,PipelineStreamProcessor)
  #- key: stroom.internalstatistics.metaDataStreamSize.docRefs
    #value: docRef(StatisticStore,946a8814-a59a-11e6-bdc4-0242ac110002,Meta Data-Stream Size)
  #- key: stroom.internalstatistics.eventsPerSecond.docRefs
    #value: docRef(StatisticStore,a9936548-2572-448b-9d5b-8543052c4d92,EPS)
  #- key: stroom.internalstatistics.cpu.docRefs
    #value: docRef(StatisticStore,af08c4a7-ee7c-44e4-8f5e-e9c6be280434,CPU)
  #- key: stroom.internalstatistics.metaDataStreamsReceived.docRefs
    #value: docRef(StatisticStore,946a87bc-a59a-11e6-bdc4-0242ac110002,Meta Data-Streams Received)
  #- key: stroom.internalstatistics.streamTaskQueueSize.docRefs
    #value: docRef(StatisticStore,946a7f0f-a59a-11e6-bdc4-0242ac110002,Stream Task Queue Size)
  #- key: stroom.internalstatistics.volumes.docRefs
    #value: docRef(StatisticStore,ac4d8d10-6f75-4946-9708-18b8cb42a5a3,Volumes)
  #- key: stroom.internalstatistics.memory.docRefs
    #value: docRef(StatisticStore,77c09ccb-e251-4ca5-bca0-56a842654397,Memory)
  #- key: stroom.internalstatistics.heapHistogramInstances.docRefs
    #value: docRef(StatisticStore,e4f243b8-2c70-4d6e-9d5a-16466bf8764f,Heap Histogram Instances)
  #- key: stroom.internalstatistics.heapHistogramBytes.docRefs
    #value: docRef(StatisticStore,934a1600-b456-49bf-9aea-f1e84025febd,Heap Histogram Bytes)

# vim: set filetype=yaml shiftwidth=2 tabstop=2 expandtab:
